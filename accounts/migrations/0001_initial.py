# Generated by Django 5.1.5 on 2025-01-19 19:39

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20, null=True, unique=True)),
                ('role', models.CharField(choices=[('Employee', 'Emp'), ('HR Manager', 'Hrm'), ('Admin', 'Admin')], default='Employee', max_length=10)),
                ('is_active', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married')], max_length=10, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('employee_number', models.CharField(default=None, editable=False, max_length=10, unique=True)),
                ('employment_type', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time')], max_length=20)),
                ('contract_type', models.CharField(blank=True, choices=[('Permanent', 'Permanent'), ('Temporary', 'Temporary'), ('Freelance', 'Freelance')], max_length=20, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('disciplinary_record', models.TextField(blank=True, null=True)),
                ('training_record', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('accounts.user',),
        ),
    ]
